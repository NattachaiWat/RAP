name: "CaffeNet"
layer {
  name: "data"
  type: "MultiImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  multiimage_data_param {
    # root_folder: "/mnt/data1/lidw/dataset/"
    root_folder: "../../data/RAP_dataset/"
    source: "./../static/classification-control/rap2_ide_att_train.txt"
    shuffle: true
    batch_size: 256
    new_height: 256
    new_width: 256
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "fine_fc8_ide"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fine_fc8_ide"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1295 
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fine_fc8_att"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fine_fc8_att"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 54
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "label_slice"
  type: "Slice"
  bottom: "label"
  top: "label_ide"
  top: "label_att"
  slice_param{
    axis: 1
    slice_point: 1
  }
}
layer {
  name: "multilabel_accuracy"
  type: "MultiLabelAccuracy"
  bottom: "fine_fc8_att"
  bottom: "label_att"
  top: "multilabel_accuracy"
}
layer {
  name: "multilabel_loss"
  type: "MultiLabelLoss"
  bottom: "fine_fc8_att"
  bottom: "label_att"
  top: "multilabel_loss"
  # loss_weight: 1.8518518518518517
  loss_weight: 0.009259259259259259 
  multilabel_loss_param{
    weight:0.319851
    weight:0.025269
    weight:0.865078
    weight:0.921612
    weight:0.000000
    weight:0.631431
    weight:0.988542
    weight:0.543785
    weight:0.998634
    weight:0.164061
    weight:0.020413
    weight:0.280088
    weight:0.992184
    weight:0.023979
    weight:0.191380
    weight:0.549173
    weight:0.554333
    weight:0.156776
    weight:0.632418
    weight:0.368417
    weight:0.665579
    weight:0.063894
    weight:0.173471
    weight:0.138716
    weight:0.026484
    weight:0.823645
    weight:0.165351
    weight:0.154955
    weight:0.114964
    weight:0.529215
    weight:0.286386
    weight:0.658674
    weight:0.698664
    weight:0.277053
    weight:0.087191
    weight:0.678403
    weight:0.023145
    weight:0.086280
    weight:0.199727
    weight:0.144711
    weight:0.373425
    weight:0.211413
    weight:0.060480
    weight:0.120276
    weight:0.854910
    weight:0.367658
    weight:0.430718
    weight:0.649795
    weight:0.371377
    weight:0.060935
    weight:0.110563
    weight:0.277204
    weight:0.615040
    weight:0.164593
  }
}
layer {
  name: "Accuracy"
  type: "Accuracy"
  bottom: "fine_fc8_ide"
  bottom: "label_ide"
  top: "Accuracy"
}
layer {
  name: "SoftmaxLoss"
  type: "SoftmaxWithLoss"
  bottom: "fine_fc8_ide"
  bottom: "label_ide"
  top: "SoftmaxLoss"
  loss_weight: 1.0
}
